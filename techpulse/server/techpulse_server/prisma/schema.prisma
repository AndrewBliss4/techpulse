generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model feedback {
  feedback_id   Int       @id @default(autoincrement())
  insight_id    Int?
  feedback_text String?
  rating        Int?
  submitted_at  DateTime? @default(now()) @db.Timestamp(6)
  insight       insight?  @relation(fields: [insight_id], references: [insight_id], onDelete: Cascade, onUpdate: NoAction)
}

model field {
  field_id     Int            @id @default(autoincrement())
  field_name   String         @db.VarChar(255)
  description  String?
  funding      BigInt?
  insight      insight[]
  scrapeddata  scrapeddata[]
  timedmetrics timedmetrics[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model insight {
  insight_id       Int        @id @default(autoincrement())
  field_id         Int?
  insight_text     String
  confidence_score Float?
  generated_at     DateTime?  @default(now()) @db.Timestamp(6)
  feedback         feedback[]
  field            field?     @relation(fields: [field_id], references: [field_id], onDelete: Cascade, onUpdate: NoAction)
}

model keyword {
  keyword_id    Int          @id @default(autoincrement())
  data_id       Int?
  keyword       String       @db.VarChar(255)
  keyword_count Int?         @default(0)
  scrapeddata   scrapeddata? @relation(fields: [data_id], references: [data_id], onDelete: Cascade, onUpdate: NoAction)
}

model scrapeddata {
  data_id            Int       @id @default(autoincrement())
  field_id           Int?
  source_id          Int?
  title              String?   @db.VarChar(255)
  content            String?
  scraped_at         DateTime? @default(now()) @db.Timestamp(6)
  published_date     DateTime? @db.Date
  citation_count     Int?      @default(0)
  job_postings_count Int?      @default(0)
  keyword            keyword[]
  field              field?    @relation(fields: [field_id], references: [field_id], onDelete: Cascade, onUpdate: NoAction)
  source             source?   @relation(fields: [source_id], references: [source_id], onDelete: Cascade, onUpdate: NoAction)
}

model scrapedsources {
  scraped_source_id  Int    @id @default(autoincrement())
  source_name        String @db.VarChar(255)
  scraped_source_url String
  article_type       String @db.VarChar(255)
  url                url[]
}

model source {
  source_id   Int           @id @default(autoincrement())
  url_id      Int?
  scrapeddata scrapeddata[]
  url         url?          @relation(fields: [url_id], references: [url_id], onDelete: Cascade, onUpdate: NoAction)
}

model timedmetrics {
  timed_metric_id Int      @id @default(autoincrement())
  metric_1        Int
  metric_2        Int
  metric_date     DateTime @db.Date
  field_id        Int?
  field           field?   @relation(fields: [field_id], references: [field_id], onDelete: Cascade, onUpdate: NoAction)
}

model url {
  url_id            Int             @id @default(autoincrement())
  url               String          @db.VarChar(2083)
  scraped_source_id Int?
  source            source[]
  scrapedsources    scrapedsources? @relation(fields: [scraped_source_id], references: [scraped_source_id], onDelete: Cascade, onUpdate: NoAction)
}
